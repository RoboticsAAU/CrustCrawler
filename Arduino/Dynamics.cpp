#include "Dynamics.h"  

Dynamics::Dynamics(ComputerConnection* pointer) : pComCon(pointer)
{
}

JointTorques Dynamics::InverseDynamics(MotionSnapshot& snapshot)
{
	JointTorques returnJointTorques;
	returnJointTorques.torques[1] = cos(snapshot.positions.thetas[2] * 2.0) * snapshot.acceleration.accelerations[1] * (-1.0716319688E-2) - cos(snapshot.positions.thetas[2] * 2.0 + snapshot.positions.thetas[3]) * snapshot.acceleration.accelerations[1] * 8.8088E-3 + cos(snapshot.positions.thetas[3]) * snapshot.acceleration.accelerations[1] * 8.8088E-3 - cos(snapshot.positions.thetas[2] * 2.0 + snapshot.positions.thetas[3] * 2.0) * snapshot.acceleration.accelerations[1] * 2.5528E-3 + snapshot.acceleration.accelerations[1] * 1.4169119688E-2 - sin(snapshot.positions.thetas[3]) * snapshot.velocities.velocities[1] * snapshot.velocities.velocities[3] * 8.8088E-3 + sin(snapshot.positions.thetas[2] * 2.0 + snapshot.positions.thetas[3] * 2.0) * snapshot.velocities.velocities[1] * snapshot.velocities.velocities[2] * 5.1056E-3 + sin(snapshot.positions.thetas[2] * 2.0 + snapshot.positions.thetas[3] * 2.0) * snapshot.velocities.velocities[1] * snapshot.velocities.velocities[3] * 5.1056E-3 + sin(snapshot.positions.thetas[2] * 2.0) * snapshot.velocities.velocities[1] * snapshot.velocities.velocities[2] * 2.1432639376E-2 + sin(snapshot.positions.thetas[2] * 2.0 + snapshot.positions.thetas[3]) * snapshot.velocities.velocities[1] * snapshot.velocities.velocities[2] * 1.76176E-2 + sin(snapshot.positions.thetas[2] * 2.0 + snapshot.positions.thetas[3]) * snapshot.velocities.velocities[1] * snapshot.velocities.velocities[3] * 8.8088E-3;
	returnJointTorques.torques[2] = sin(snapshot.positions.thetas[2]) * (-9.967052536E-1) - sin(snapshot.positions.thetas[2] + snapshot.positions.thetas[3]) * 3.931928E-1 - sin(snapshot.positions.thetas[2] * 2.0) * pow(snapshot.velocities.velocities[1], 2.0) * 1.0716319688E-2 - sin(snapshot.positions.thetas[2] * 2.0 + snapshot.positions.thetas[3]) * pow(snapshot.velocities.velocities[1], 2.0) * 8.8088E-3 - sin(snapshot.positions.thetas[3]) * pow(snapshot.velocities.velocities[3], 2.0) * 8.8088E-3 + cos(snapshot.positions.thetas[3]) * snapshot.acceleration.accelerations[3] * 8.8088E-3 - sin(snapshot.positions.thetas[2] * 2.0 + snapshot.positions.thetas[3] * 2.0) * pow(snapshot.velocities.velocities[1], 2.0) * 2.5528E-3 + snapshot.acceleration.accelerations[2] * 2.1532639376E-2;
	returnJointTorques.torques[3] = sin(snapshot.positions.thetas[2] + snapshot.positions.thetas[3]) * (-3.931928E-1) - sin(snapshot.positions.thetas[2] * 2.0 + snapshot.positions.thetas[3]) * pow(snapshot.velocities.velocities[1], 2.0) * 4.4044E-3 + sin(snapshot.positions.thetas[3]) * pow(snapshot.velocities.velocities[1], 2.0) * 4.4044E-3 + cos(snapshot.positions.thetas[3]) * snapshot.acceleration.accelerations[2] * 8.8088E-3 - sin(snapshot.positions.thetas[2] * 2.0 + snapshot.positions.thetas[3] * 2.0) * pow(snapshot.velocities.velocities[1], 2.0) * 2.5528E-3 + snapshot.acceleration.accelerations[3] * 6.2056E-3;
	return returnJointTorques;
}

