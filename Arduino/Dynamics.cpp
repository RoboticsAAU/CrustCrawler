#include "Dynamics.h"  

Dynamics::Dynamics(ComputerConnection* pointer) : pComCon(pointer)
{
}

JointTorques Dynamics::InverseDynamics(Velocities& velocities, double& deltaTime)
{
	for (int i = 1; i < 6; i++) {
		_anglePosition.thetas[i] = Integrate(velocities.velocities[i], _anglePosition.thetas[i], deltaTime);
		_angleAccelerations.accelerations[i] = Differentiate(velocities.velocities[i], _previousVelocities.velocities[i], deltaTime);
	}

	// From matlab
	//_returnTorques.torques[1] = cos(_anglePosition.thetas[2] * 2.0) * _angleAccelerations.accelerations[1] * (-1.0716319688E-2) - cos(_anglePosition.thetas[2] * 2.0 + _anglePosition.thetas[3]) * _angleAccelerations.accelerations[1] * 8.8088E-3 + cos(_anglePosition.thetas[3]) * _angleAccelerations.accelerations[1] * 8.8088E-3 - cos(_anglePosition.thetas[2] * 2.0 + _anglePosition.thetas[3] * 2.0) * _angleAccelerations.accelerations[1] * 2.5528E-3 + _angleAccelerations.accelerations[1] * 1.4169119688E-2 - sin(_anglePosition.thetas[3]) * velocities.velocities[1] * velocities.velocities[3] * 8.8088E-3 + sin(_anglePosition.thetas[2] * 2.0 + _anglePosition.thetas[3] * 2.0) * velocities.velocities[1] * velocities.velocities[2] * 5.1056E-3 + sin(_anglePosition.thetas[2] * 2.0 + _anglePosition.thetas[3] * 2.0) * velocities.velocities[1] * velocities.velocities[3] * 5.1056E-3 + sin(_anglePosition.thetas[2] * 2.0) * velocities.velocities[1] * velocities.velocities[2] * 2.1432639376E-2 + sin(_anglePosition.thetas[2] * 2.0 + _anglePosition.thetas[3]) * velocities.velocities[1] * velocities.velocities[2] * 1.76176E-2 + sin(_anglePosition.thetas[2] * 2.0 + _anglePosition.thetas[3]) * velocities.velocities[1] * velocities.velocities[3] * 8.8088E-3;
	//_returnTorques.torques[2] = sin(_anglePosition.thetas[2]) * (-9.967052536E-1) - sin(_anglePosition.thetas[2] + _anglePosition.thetas[3]) * 3.931928E-1 - sin(_anglePosition.thetas[2] * 2.0) * pow(velocities.velocities[1], 2.0) * 1.0716319688E-2 - sin(_anglePosition.thetas[2] * 2.0 + _anglePosition.thetas[3]) * pow(velocities.velocities[1], 2.0) * 8.8088E-3 - sin(_anglePosition.thetas[3]) * pow(velocities.velocities[3], 2.0) * 8.8088E-3 + cos(_anglePosition.thetas[3]) * _angleAccelerations.accelerations[3] * 8.8088E-3 - sin(_anglePosition.thetas[2] * 2.0 + _anglePosition.thetas[3] * 2.0) * pow(velocities.velocities[1], 2.0) * 2.5528E-3 + _angleAccelerations.accelerations[2] * 2.1532639376E-2;
	//_returnTorques.torques[3] = sin(_anglePosition.thetas[2] + _anglePosition.thetas[3]) * (-3.931928E-1) - sin(_anglePosition.thetas[2] * 2.0 + _anglePosition.thetas[3]) * pow(velocities.velocities[1], 2.0) * 4.4044E-3 + sin(_anglePosition.thetas[3]) * pow(velocities.velocities[1], 2.0) * 4.4044E-3 + cos(_anglePosition.thetas[3]) * _angleAccelerations.accelerations[2] * 8.8088E-3 - sin(_anglePosition.thetas[2] * 2.0 + _anglePosition.thetas[3] * 2.0) * pow(velocities.velocities[1], 2.0) * 2.5528E-3 + _angleAccelerations.accelerations[3] * 6.2056E-3;

	// First draft
	//_returnTorques.torques[1] = (((0.2e-5 * pow(cos(_anglePosition.thetas[1]), 0.2e1) - 0.1121e-1) * pow(cos(_anglePosition.thetas[3]), 0.2e1) - 0.1762e-1 * cos(_anglePosition.thetas[3]) - 0.1581e-1 + 0.5e-3 * sin(_anglePosition.thetas[3])) * pow(cos(_anglePosition.thetas[2]), 0.2e1) + ((0.5e-3 * sin(_anglePosition.thetas[2]) + 0.1121e-1 * sin(_anglePosition.thetas[2]) * sin(_anglePosition.thetas[3])) * cos(_anglePosition.thetas[3]) + 0.1762e-1 * sin(_anglePosition.thetas[2]) * sin(_anglePosition.thetas[3])) * cos(_anglePosition.thetas[2]) + 0.1762e-1 * cos(_anglePosition.thetas[3]) + 0.5606e-2 * pow(cos(_anglePosition.thetas[3]), 0.2e1) + 0.2e-3 * sin(_anglePosition.thetas[3]) + 0.2162e-1) * _angleAccelerations.accelerations[1] + (0.4e-5 * cos(_anglePosition.thetas[1]) * sin(_anglePosition.thetas[2]) * cos(_anglePosition.thetas[3]) * sin(_anglePosition.thetas[1]) - 0.2e-5 * cos(_anglePosition.thetas[1]) * sin(_anglePosition.thetas[2]) * sin(_anglePosition.thetas[1])) * cos(_anglePosition.thetas[2]) * _angleAccelerations.accelerations[2] + ((0.2e-5 * cos(_anglePosition.thetas[1]) * sin(_anglePosition.thetas[1]) + 0.4e-5 * cos(_anglePosition.thetas[1]) * sin(_anglePosition.thetas[1]) * cos(_anglePosition.thetas[3])) * pow(cos(_anglePosition.thetas[2]), 0.2e1) + (-0.4e-5 * cos(_anglePosition.thetas[1]) * sin(_anglePosition.thetas[2]) * sin(_anglePosition.thetas[1]) * sin(_anglePosition.thetas[3]) + 0.2e-5 * cos(_anglePosition.thetas[1]) * sin(_anglePosition.thetas[2]) * cos(_anglePosition.thetas[3]) * sin(_anglePosition.thetas[1]) * sin(_anglePosition.thetas[3])) * cos(_anglePosition.thetas[2]) - 0.4e-5 * cos(_anglePosition.thetas[1]) * sin(_anglePosition.thetas[1]) * cos(_anglePosition.thetas[3]) - 0.2e-5 * cos(_anglePosition.thetas[1]) * sin(_anglePosition.thetas[1])) * pow(velocities.velocities[1], 0.2e1) + ((((0.2242e-1 * sin(_anglePosition.thetas[3]) + 0.2e-4 * pow(cos(_anglePosition.thetas[1]), 0.2e1) * sin(_anglePosition.thetas[3]) + 0.10e-2) * cos(_anglePosition.thetas[3]) + 0.2e-4 * pow(cos(_anglePosition.thetas[1]), 0.2e1) * sin(_anglePosition.thetas[3]) + 0.3522e-1 * sin(_anglePosition.thetas[3])) * pow(cos(_anglePosition.thetas[2]), 0.2e1) + ((0.2242e-1 * sin(_anglePosition.thetas[2]) + 0.2e-4 * pow(cos(_anglePosition.thetas[1]), 0.2e1) * sin(_anglePosition.thetas[2])) * pow(cos(_anglePosition.thetas[3]), 0.2e1) + 0.3524e-1 * sin(_anglePosition.thetas[2]) * cos(_anglePosition.thetas[3]) - 0.1e-4 * pow(cos(_anglePosition.thetas[1]), 0.2e1) * sin(_anglePosition.thetas[2]) - 0.10e-2 * sin(_anglePosition.thetas[2]) * sin(_anglePosition.thetas[3]) + 0.3165e-1 * sin(_anglePosition.thetas[2])) * cos(_anglePosition.thetas[2]) + (-0.5e-3 - 0.1e-4 * pow(cos(_anglePosition.thetas[1]), 0.2e1) * sin(_anglePosition.thetas[3]) - 0.1121e-1 * sin(_anglePosition.thetas[3])) * cos(_anglePosition.thetas[3]) - 0.1761e-1 * sin(_anglePosition.thetas[3]) - 0.1e-4 * pow(cos(_anglePosition.thetas[1]), 0.2e1) * sin(_anglePosition.thetas[3])) * velocities.velocities[2] + (((0.2242e-1 * sin(_anglePosition.thetas[3]) + 0.2e-4 * pow(cos(_anglePosition.thetas[1]), 0.2e1) * sin(_anglePosition.thetas[3]) + 0.5e-3) * cos(_anglePosition.thetas[3]) + 0.1e-4 * pow(cos(_anglePosition.thetas[1]), 0.2e1) * sin(_anglePosition.thetas[3]) + 0.1761e-1 * sin(_anglePosition.thetas[3])) * pow(cos(_anglePosition.thetas[2]), 0.2e1) + ((0.2242e-1 * sin(_anglePosition.thetas[2]) + 0.2e-4 * pow(cos(_anglePosition.thetas[1]), 0.2e1) * sin(_anglePosition.thetas[2])) * pow(cos(_anglePosition.thetas[3]), 0.2e1) + (0.1761e-1 * sin(_anglePosition.thetas[2]) + 0.1e-4 * pow(cos(_anglePosition.thetas[1]), 0.2e1) * sin(_anglePosition.thetas[2])) * cos(_anglePosition.thetas[3]) - 0.1e-4 * pow(cos(_anglePosition.thetas[1]), 0.2e1) * sin(_anglePosition.thetas[2]) - 0.5e-3 * sin(_anglePosition.thetas[2]) * sin(_anglePosition.thetas[3]) - 0.1121e-1 * sin(_anglePosition.thetas[2])) * cos(_anglePosition.thetas[2]) + (0.2e-3 - 0.1e-4 * pow(cos(_anglePosition.thetas[1]), 0.2e1) * sin(_anglePosition.thetas[3]) - 0.1121e-1 * sin(_anglePosition.thetas[3])) * cos(_anglePosition.thetas[3]) - 0.1761e-1 * sin(_anglePosition.thetas[3]) - 0.1e-4 * pow(cos(_anglePosition.thetas[1]), 0.2e1) * sin(_anglePosition.thetas[3])) * velocities.velocities[3]) * velocities.velocities[1] + (0.8e-5 * cos(_anglePosition.thetas[1]) * pow(cos(_anglePosition.thetas[2]), 0.2e1) * sin(_anglePosition.thetas[1]) * cos(_anglePosition.thetas[3]) + (-0.4e-5 * cos(_anglePosition.thetas[1]) * sin(_anglePosition.thetas[2]) * sin(_anglePosition.thetas[1]) * sin(_anglePosition.thetas[3]) + 0.2e-5 * cos(_anglePosition.thetas[1]) * sin(_anglePosition.thetas[2]) * cos(_anglePosition.thetas[3]) * sin(_anglePosition.thetas[1]) * sin(_anglePosition.thetas[3])) * cos(_anglePosition.thetas[2]) - 0.4e-5 * cos(_anglePosition.thetas[1]) * sin(_anglePosition.thetas[1]) * cos(_anglePosition.thetas[3]) + 0.2e-5 * cos(_anglePosition.thetas[1]) * sin(_anglePosition.thetas[1])) * pow(velocities.velocities[2], 0.2e1) + ((-0.8e-5 * cos(_anglePosition.thetas[1]) * pow(cos(_anglePosition.thetas[3]), 0.2e1) * sin(_anglePosition.thetas[1]) + 0.6e-5 * cos(_anglePosition.thetas[1]) * sin(_anglePosition.thetas[1]) * cos(_anglePosition.thetas[3]) + 0.4e-5 * cos(_anglePosition.thetas[1]) * sin(_anglePosition.thetas[1])) * pow(cos(_anglePosition.thetas[2]), 0.2e1) - 0.4e-5 * cos(_anglePosition.thetas[1]) * sin(_anglePosition.thetas[2]) * sin(_anglePosition.thetas[1]) * cos(_anglePosition.thetas[2]) * sin(_anglePosition.thetas[3]) - 0.2e-5 * cos(_anglePosition.thetas[1]) * sin(_anglePosition.thetas[1]) - 0.2e-5 * cos(_anglePosition.thetas[1]) * sin(_anglePosition.thetas[1]) * cos(_anglePosition.thetas[3]) + 0.4e-5 * cos(_anglePosition.thetas[1]) * pow(cos(_anglePosition.thetas[3]), 0.2e1) * sin(_anglePosition.thetas[1])) * velocities.velocities[3] * velocities.velocities[2] + 0.2e-5 * sin(_anglePosition.thetas[1]) * cos(_anglePosition.thetas[2]) * pow(velocities.velocities[3], 0.2e1) * cos(_anglePosition.thetas[3]) * cos(_anglePosition.thetas[1]) * sin(_anglePosition.thetas[2]) * sin(_anglePosition.thetas[3]);
	//_returnTorques.torques[2] = (((-0.2e-4 * cos(_anglePosition.thetas[3]) - 0.1e-4 * pow(cos(_anglePosition.thetas[3]), 0.2e1) + 0.3e-4) * pow(cos(_anglePosition.thetas[1]), 0.4e1) + (0.2e-4 * cos(_anglePosition.thetas[3]) - 0.4e-5 * pow(cos(_anglePosition.thetas[3]), 0.2e1) - 0.2e-4) * pow(cos(_anglePosition.thetas[1]), 0.2e1) + 0.2e-5 * pow(cos(_anglePosition.thetas[3]), 0.2e1)) * pow(cos(_anglePosition.thetas[2]), 0.2e1) + (0.2e-4 * pow(cos(_anglePosition.thetas[1]), 0.4e1) * sin(_anglePosition.thetas[2]) * sin(_anglePosition.thetas[3]) - 0.2e-4 * pow(cos(_anglePosition.thetas[1]), 0.2e1) * sin(_anglePosition.thetas[2]) * sin(_anglePosition.thetas[3])) * cos(_anglePosition.thetas[2]) + (-0.2e-4 + 0.2e-4 * cos(_anglePosition.thetas[3])) * pow(cos(_anglePosition.thetas[1]), 0.4e1) + (0.20e-4 - 0.2e-4 * cos(_anglePosition.thetas[3])) * pow(cos(_anglePosition.thetas[1]), 0.2e1) + 0.2773e-1 + 0.1762e-1 * cos(_anglePosition.thetas[3])) * _angleAccelerations.accelerations[2] + ((-0.4e-5 * pow(cos(_anglePosition.thetas[3]), 0.2e1) * pow(cos(_anglePosition.thetas[1]), 0.2e1) - 0.1e-4 * pow(cos(_anglePosition.thetas[3]), 0.2e1) * pow(cos(_anglePosition.thetas[1]), 0.4e1) + 0.2e-5 * pow(cos(_anglePosition.thetas[3]), 0.2e1)) * pow(cos(_anglePosition.thetas[2]), 0.2e1) - 0.4e-5 * cos(_anglePosition.thetas[2]) * sin(_anglePosition.thetas[3]) * pow(cos(_anglePosition.thetas[1]), 0.4e1) * sin(_anglePosition.thetas[2]) + 0.8808e-2 * cos(_anglePosition.thetas[3]) + 0.6206e-2) * velocities.velocities[3] + (0.4e-5 * sin(_anglePosition.thetas[1]) * sin(_anglePosition.thetas[2]) * cos(_anglePosition.thetas[3]) - 0.2e-5 * sin(_anglePosition.thetas[1]) * sin(_anglePosition.thetas[2])) * cos(_anglePosition.thetas[1]) * cos(_anglePosition.thetas[2]) * _angleAccelerations.accelerations[1] + ((0.2e-5 * pow(cos(_anglePosition.thetas[1]), 0.2e1) * cos(_anglePosition.thetas[3]) * sin(_anglePosition.thetas[3]) + (-0.1121e-1 * sin(_anglePosition.thetas[3]) - 0.5000e-3) * cos(_anglePosition.thetas[3]) - 0.1762e-1 * sin(_anglePosition.thetas[3])) * pow(cos(_anglePosition.thetas[2]), 0.2e1) + ((0.1e-4 * sin(_anglePosition.thetas[2]) * cos(_anglePosition.thetas[3]) + 0.2e-5 * pow(cos(_anglePosition.thetas[3]), 0.2e1) * sin(_anglePosition.thetas[2])) * pow(cos(_anglePosition.thetas[1]), 0.2e1) - 0.1121e-1 * pow(cos(_anglePosition.thetas[3]), 0.2e1) * sin(_anglePosition.thetas[2]) - 0.1762e-1 * sin(_anglePosition.thetas[2]) * cos(_anglePosition.thetas[3]) + (0.5000e-3 * sin(_anglePosition.thetas[3]) - 0.1581e-1) * sin(_anglePosition.thetas[2])) * cos(_anglePosition.thetas[2]) + (0.2500e-3 + 0.5606e-2 * sin(_anglePosition.thetas[3])) * cos(_anglePosition.thetas[3]) + 0.8808e-2 * sin(_anglePosition.thetas[3])) * pow(velocities.velocities[1], 0.2e1) + (((0.10e-4 * pow(cos(_anglePosition.thetas[3]), 0.2e1) * sin(_anglePosition.thetas[1]) + 0.4e-5 * sin(_anglePosition.thetas[1]) * cos(_anglePosition.thetas[3]) - 0.30e-5 * sin(_anglePosition.thetas[1])) * cos(_anglePosition.thetas[1]) * pow(cos(_anglePosition.thetas[2]), 0.2e1) + (0.70e-5 * sin(_anglePosition.thetas[1]) - 0.4e-5 * sin(_anglePosition.thetas[1]) * cos(_anglePosition.thetas[3]) - 0.5e-5 * pow(cos(_anglePosition.thetas[3]), 0.2e1) * sin(_anglePosition.thetas[1])) * cos(_anglePosition.thetas[1])) * velocities.velocities[2] + ((-0.3e-5 * sin(_anglePosition.thetas[1]) * cos(_anglePosition.thetas[3]) + 0.10e-4 * pow(cos(_anglePosition.thetas[3]), 0.2e1) * sin(_anglePosition.thetas[1]) - 0.5e-5 * sin(_anglePosition.thetas[1])) * cos(_anglePosition.thetas[1]) * pow(cos(_anglePosition.thetas[2]), 0.2e1) - 0.3e-5 * cos(_anglePosition.thetas[1]) * sin(_anglePosition.thetas[2]) * sin(_anglePosition.thetas[1]) * cos(_anglePosition.thetas[2]) * sin(_anglePosition.thetas[3]) + (0.5e-5 * sin(_anglePosition.thetas[1]) - 0.5e-5 * pow(cos(_anglePosition.thetas[3]), 0.2e1) * sin(_anglePosition.thetas[1])) * cos(_anglePosition.thetas[1])) * velocities.velocities[3]) * velocities.velocities[1] + (((-0.1e-4 * sin(_anglePosition.thetas[3]) - 0.12e-4 * sin(_anglePosition.thetas[3]) * cos(_anglePosition.thetas[3])) * pow(cos(_anglePosition.thetas[1]), 0.4e1) + (0.24e-4 * sin(_anglePosition.thetas[3]) + 0.2e-5 * sin(_anglePosition.thetas[3]) * cos(_anglePosition.thetas[3])) * pow(cos(_anglePosition.thetas[1]), 0.2e1) + 0.2e-5 * sin(_anglePosition.thetas[3]) * cos(_anglePosition.thetas[3]) - 0.2e-5 * sin(_anglePosition.thetas[3])) * pow(cos(_anglePosition.thetas[2]), 0.2e1) + ((-0.18e-4 * sin(_anglePosition.thetas[2]) + 0.2e-4 * sin(_anglePosition.thetas[2]) * cos(_anglePosition.thetas[3]) - 0.12e-4 * pow(cos(_anglePosition.thetas[3]), 0.2e1) * sin(_anglePosition.thetas[2])) * pow(cos(_anglePosition.thetas[1]), 0.4e1) + (0.2e-4 * sin(_anglePosition.thetas[2]) - 0.2e-4 * sin(_anglePosition.thetas[2]) * cos(_anglePosition.thetas[3]) + 0.2e-5 * pow(cos(_anglePosition.thetas[3]), 0.2e1) * sin(_anglePosition.thetas[2])) * pow(cos(_anglePosition.thetas[1]), 0.2e1) + 0.2e-5 * pow(cos(_anglePosition.thetas[3]), 0.2e1) * sin(_anglePosition.thetas[2])) * cos(_anglePosition.thetas[2]) + (0.2e-5 * sin(_anglePosition.thetas[3]) * cos(_anglePosition.thetas[3]) + 0.1e-4 * sin(_anglePosition.thetas[3])) * pow(cos(_anglePosition.thetas[1]), 0.4e1) - 0.1e-4 * pow(cos(_anglePosition.thetas[1]), 0.2e1) * sin(_anglePosition.thetas[3])) * pow(velocities.velocities[2], 0.2e1) - 0.1762e-1 * velocities.velocities[2] * velocities.velocities[3] * sin(_anglePosition.thetas[3]) + ((0.2e-5 * sin(_anglePosition.thetas[3]) * cos(_anglePosition.thetas[3]) - 0.12e-4 * cos(_anglePosition.thetas[3]) * pow(cos(_anglePosition.thetas[1]), 0.4e1) * sin(_anglePosition.thetas[3]) + 0.2e-5 * pow(cos(_anglePosition.thetas[1]), 0.2e1) * cos(_anglePosition.thetas[3]) * sin(_anglePosition.thetas[3])) * pow(cos(_anglePosition.thetas[2]), 0.2e1) + ((0.2e-5 * sin(_anglePosition.thetas[2]) - 0.12e-4 * pow(cos(_anglePosition.thetas[3]), 0.2e1) * sin(_anglePosition.thetas[2]) - 0.4e-5 * sin(_anglePosition.thetas[2]) * cos(_anglePosition.thetas[3])) * pow(cos(_anglePosition.thetas[1]), 0.4e1) + 0.2e-5 * pow(cos(_anglePosition.thetas[1]), 0.2e1) * sin(_anglePosition.thetas[2]) * pow(cos(_anglePosition.thetas[3]), 0.2e1) + 0.2e-5 * pow(cos(_anglePosition.thetas[3]), 0.2e1) * sin(_anglePosition.thetas[2])) * cos(_anglePosition.thetas[2]) - 0.8808e-2 * sin(_anglePosition.thetas[3]) + 0.2e-5 * cos(_anglePosition.thetas[3]) * pow(cos(_anglePosition.thetas[1]), 0.4e1) * sin(_anglePosition.thetas[3])) * pow(velocities.velocities[3], 0.2e1) + 0.9962e0 * sin(_anglePosition.thetas[2]) + 0.3930e0 * sin(_anglePosition.thetas[2]) * cos(_anglePosition.thetas[3]) + 0.3930e0 * cos(_anglePosition.thetas[2]) * sin(_anglePosition.thetas[3]);
	//_returnTorques.torques[3] = ((0.2e-5 * pow(cos(_anglePosition.thetas[3]), 0.2e1) - 0.1e-4 * pow(cos(_anglePosition.thetas[3]), 0.2e1) * pow(cos(_anglePosition.thetas[1]), 0.4e1)) * pow(cos(_anglePosition.thetas[2]), 0.2e1) + 0.8808e-2 * cos(_anglePosition.thetas[3]) + 0.6206e-2) * _angleAccelerations.accelerations[2] + (0.6206e-2 + (0.2e-5 * pow(cos(_anglePosition.thetas[3]), 0.2e1) - 0.1e-4 * pow(cos(_anglePosition.thetas[3]), 0.2e1) * pow(cos(_anglePosition.thetas[1]), 0.4e1)) * pow(cos(_anglePosition.thetas[2]), 0.2e1)) * _angleAccelerations.accelerations[3] + ((0.2e-5 * pow(cos(_anglePosition.thetas[1]), 0.2e1) * cos(_anglePosition.thetas[3]) * sin(_anglePosition.thetas[3]) + (-0.1121e-1 * sin(_anglePosition.thetas[3]) - 0.2500e-3) * cos(_anglePosition.thetas[3]) - 0.8808e-2 * sin(_anglePosition.thetas[3])) * pow(cos(_anglePosition.thetas[2]), 0.2e1) + (-0.8808e-2 * sin(_anglePosition.thetas[2]) * cos(_anglePosition.thetas[3]) + 0.2500e-3 * sin(_anglePosition.thetas[2]) * sin(_anglePosition.thetas[3]) - 0.1121e-1 * pow(cos(_anglePosition.thetas[3]), 0.2e1) * sin(_anglePosition.thetas[2]) + 0.2e-5 * pow(cos(_anglePosition.thetas[1]), 0.2e1) * sin(_anglePosition.thetas[2]) * pow(cos(_anglePosition.thetas[3]), 0.2e1) + 0.5606e-2 * sin(_anglePosition.thetas[2])) * cos(_anglePosition.thetas[2]) + (-0.1000e-3 + 0.5606e-2 * sin(_anglePosition.thetas[3])) * cos(_anglePosition.thetas[3]) + 0.8808e-2 * sin(_anglePosition.thetas[3])) * pow(velocities.velocities[1], 0.2e1) + (((-0.2e-5 * sin(_anglePosition.thetas[1]) - 0.2e-5 * sin(_anglePosition.thetas[1]) * cos(_anglePosition.thetas[3]) + 0.4e-5 * pow(cos(_anglePosition.thetas[3]), 0.2e1) * sin(_anglePosition.thetas[1])) * cos(_anglePosition.thetas[1]) * pow(cos(_anglePosition.thetas[2]), 0.2e1) + (0.4e-5 * sin(_anglePosition.thetas[2]) * cos(_anglePosition.thetas[3]) * sin(_anglePosition.thetas[1]) * sin(_anglePosition.thetas[3]) - 0.3e-5 * sin(_anglePosition.thetas[1]) * sin(_anglePosition.thetas[2]) * sin(_anglePosition.thetas[3])) * cos(_anglePosition.thetas[1]) * cos(_anglePosition.thetas[2]) + (0.2e-5 * sin(_anglePosition.thetas[1]) - 0.2e-5 * pow(cos(_anglePosition.thetas[3]), 0.2e1) * sin(_anglePosition.thetas[1])) * cos(_anglePosition.thetas[1])) * velocities.velocities[2] + ((0.4e-5 * pow(cos(_anglePosition.thetas[3]), 0.2e1) * sin(_anglePosition.thetas[1]) - 0.2e-5 * sin(_anglePosition.thetas[1])) * cos(_anglePosition.thetas[1]) * pow(cos(_anglePosition.thetas[2]), 0.2e1) + 0.4e-5 * cos(_anglePosition.thetas[1]) * sin(_anglePosition.thetas[2]) * cos(_anglePosition.thetas[3]) * sin(_anglePosition.thetas[1]) * cos(_anglePosition.thetas[2]) * sin(_anglePosition.thetas[3]) + (0.2e-5 * sin(_anglePosition.thetas[1]) - 0.2e-5 * pow(cos(_anglePosition.thetas[3]), 0.2e1) * sin(_anglePosition.thetas[1])) * cos(_anglePosition.thetas[1])) * velocities.velocities[3]) * velocities.velocities[1] + (0.1e-4 * pow(cos(_anglePosition.thetas[2]), 0.2e1) * cos(_anglePosition.thetas[3]) * pow(cos(_anglePosition.thetas[1]), 0.4e1) * sin(_anglePosition.thetas[3]) + ((0.1e-4 * sin(_anglePosition.thetas[2]) * cos(_anglePosition.thetas[3]) + 0.1e-4 * pow(cos(_anglePosition.thetas[3]), 0.2e1) * sin(_anglePosition.thetas[2])) * pow(cos(_anglePosition.thetas[1]), 0.4e1) - 0.1e-4 * pow(cos(_anglePosition.thetas[1]), 0.2e1) * sin(_anglePosition.thetas[2]) * cos(_anglePosition.thetas[3])) * cos(_anglePosition.thetas[2]) + 0.8808e-2 * sin(_anglePosition.thetas[3]) - 0.4e-5 * pow(cos(_anglePosition.thetas[1]), 0.4e1) * sin(_anglePosition.thetas[3]) + 0.4e-5 * pow(cos(_anglePosition.thetas[1]), 0.2e1) * sin(_anglePosition.thetas[3])) * pow(velocities.velocities[2], 0.2e1) + ((-0.4e-5 * pow(cos(_anglePosition.thetas[1]), 0.2e1) * sin(_anglePosition.thetas[3]) + 0.4e-5 * pow(cos(_anglePosition.thetas[1]), 0.4e1) * sin(_anglePosition.thetas[3])) * pow(cos(_anglePosition.thetas[2]), 0.2e1) + (0.4e-5 * pow(cos(_anglePosition.thetas[1]), 0.4e1) * sin(_anglePosition.thetas[2]) * cos(_anglePosition.thetas[3]) - 0.4e-5 * pow(cos(_anglePosition.thetas[1]), 0.2e1) * sin(_anglePosition.thetas[2]) * cos(_anglePosition.thetas[3])) * cos(_anglePosition.thetas[2]) - 0.4e-5 * pow(cos(_anglePosition.thetas[1]), 0.4e1) * sin(_anglePosition.thetas[3]) + 0.4e-5 * pow(cos(_anglePosition.thetas[1]), 0.2e1) * sin(_anglePosition.thetas[3])) * velocities.velocities[3] * velocities.velocities[2] + (0.1e-4 * cos(_anglePosition.thetas[2]) * pow(cos(_anglePosition.thetas[1]), 0.4e1) * pow(cos(_anglePosition.thetas[3]), 0.2e1) * sin(_anglePosition.thetas[2]) + 0.1e-4 * pow(cos(_anglePosition.thetas[2]), 0.2e1) * cos(_anglePosition.thetas[3]) * pow(cos(_anglePosition.thetas[1]), 0.4e1) * sin(_anglePosition.thetas[3])) * pow(velocities.velocities[3], 0.2e1) + 0.3930e0 * sin(_anglePosition.thetas[2]) * cos(_anglePosition.thetas[3]) + 0.3930e0 * cos(_anglePosition.thetas[2]) * sin(_anglePosition.thetas[3]);
	
	
	_returnTorques.torques[1] = (((-0.2000e-5 * pow(cos(_anglePosition.thetas[1]), 0.2e1) - 0.1121e-1) * pow(cos(_anglePosition.thetas[3]), 0.2e1) - 0.1762e-1 * cos(_anglePosition.thetas[3]) - 0.1581e-1 + 0.5e-3 * sin(_anglePosition.thetas[3])) * pow(cos(_anglePosition.thetas[2]), 0.2e1) + ((0.5e-3 + 0.1121e-1 * sin(_anglePosition.thetas[3])) * sin(_anglePosition.thetas[2]) * cos(_anglePosition.thetas[3]) + 0.1762e-1 * sin(_anglePosition.thetas[2]) * sin(_anglePosition.thetas[3])) * cos(_anglePosition.thetas[2]) + 0.5606e-2 * pow(cos(_anglePosition.thetas[3]), 0.2e1) + 0.2e-3 * sin(_anglePosition.thetas[3]) + 0.1762e-1 * cos(_anglePosition.thetas[3]) + 0.2162e-1) * _angleAccelerations.accelerations[1] + (-0.4000e-5 * sin(_anglePosition.thetas[1]) * sin(_anglePosition.thetas[2]) * cos(_anglePosition.thetas[3]) * cos(_anglePosition.thetas[1]) + 0.2000e-5 * sin(_anglePosition.thetas[1]) * sin(_anglePosition.thetas[2]) * cos(_anglePosition.thetas[1])) * cos(_anglePosition.thetas[2]) * _angleAccelerations.accelerations[2] + ((0.4000e-5 * sin(_anglePosition.thetas[1]) * pow(cos(_anglePosition.thetas[3]), 0.2e1) * cos(_anglePosition.thetas[1]) + 0.6000e-5 * sin(_anglePosition.thetas[1]) * cos(_anglePosition.thetas[1]) * cos(_anglePosition.thetas[3])) * pow(cos(_anglePosition.thetas[2]), 0.2e1) + (-0.6000e-5 * sin(_anglePosition.thetas[1]) * sin(_anglePosition.thetas[2]) * cos(_anglePosition.thetas[1]) * sin(_anglePosition.thetas[3]) - 0.2000e-5 * sin(_anglePosition.thetas[1]) * sin(_anglePosition.thetas[2]) * cos(_anglePosition.thetas[3]) * cos(_anglePosition.thetas[1]) * sin(_anglePosition.thetas[3])) * cos(_anglePosition.thetas[2]) - 0.2000e-5 * sin(_anglePosition.thetas[1]) * pow(cos(_anglePosition.thetas[3]), 0.2e1) * cos(_anglePosition.thetas[1]) - 0.6000e-5 * sin(_anglePosition.thetas[1]) * cos(_anglePosition.thetas[1]) * cos(_anglePosition.thetas[3]) - 0.2000e-5 * cos(_anglePosition.thetas[1]) * sin(_anglePosition.thetas[1])) * pow(velocities.velocities[1], 0.2e1) + (((-0.2e-4 * pow(cos(_anglePosition.thetas[1]), 0.2e1) * sin(_anglePosition.thetas[3]) + 0.2244e-1 * sin(_anglePosition.thetas[3]) + 0.10e-2) * cos(_anglePosition.thetas[3]) + 0.3524e-1 * sin(_anglePosition.thetas[3])) * pow(cos(_anglePosition.thetas[2]), 0.2e1) + ((-0.2e-4 * pow(cos(_anglePosition.thetas[1]), 0.2e1) * sin(_anglePosition.thetas[2]) + 0.2244e-1 * sin(_anglePosition.thetas[2])) * pow(cos(_anglePosition.thetas[3]), 0.2e1) + (0.3523e-1 * sin(_anglePosition.thetas[2]) + 0.2e-4 * pow(cos(_anglePosition.thetas[1]), 0.2e1) * sin(_anglePosition.thetas[2])) * cos(_anglePosition.thetas[3]) + 0.1e-4 * pow(cos(_anglePosition.thetas[1]), 0.2e1) * sin(_anglePosition.thetas[2]) + (-0.10e-2 * sin(_anglePosition.thetas[3]) + 0.3164e-1) * sin(_anglePosition.thetas[2])) * cos(_anglePosition.thetas[2]) + (-0.5e-3 + 0.1e-4 * pow(cos(_anglePosition.thetas[1]), 0.2e1) * sin(_anglePosition.thetas[3]) - 0.1122e-1 * sin(_anglePosition.thetas[3])) * cos(_anglePosition.thetas[3]) - 0.1762e-1 * sin(_anglePosition.thetas[3])) * velocities.velocities[2] + (((-0.2e-4 * pow(cos(_anglePosition.thetas[1]), 0.2e1) * sin(_anglePosition.thetas[3]) + 0.2244e-1 * sin(_anglePosition.thetas[3]) + 0.5e-3) * cos(_anglePosition.thetas[3]) + 0.1762e-1 * sin(_anglePosition.thetas[3])) * pow(cos(_anglePosition.thetas[2]), 0.2e1) + ((-0.2e-4 * pow(cos(_anglePosition.thetas[1]), 0.2e1) * sin(_anglePosition.thetas[2]) + 0.2244e-1 * sin(_anglePosition.thetas[2])) * pow(cos(_anglePosition.thetas[3]), 0.2e1) + 0.1762e-1 * sin(_anglePosition.thetas[2]) * cos(_anglePosition.thetas[3]) + 0.1e-4 * pow(cos(_anglePosition.thetas[1]), 0.2e1) * sin(_anglePosition.thetas[2]) + (-0.5e-3 * sin(_anglePosition.thetas[3]) - 0.1122e-1) * sin(_anglePosition.thetas[2])) * cos(_anglePosition.thetas[2]) + (0.1e-4 * pow(cos(_anglePosition.thetas[1]), 0.2e1) * sin(_anglePosition.thetas[3]) + 0.2e-3 - 0.1122e-1 * sin(_anglePosition.thetas[3])) * cos(_anglePosition.thetas[3]) - 0.1762e-1 * sin(_anglePosition.thetas[3])) * velocities.velocities[3];
	_returnTorques.torques[2] = (((-0.2e-4 * cos(_anglePosition.thetas[3]) - 0.1e-4 * pow(cos(_anglePosition.thetas[3]), 0.2e1)) * pow(cos(_anglePosition.thetas[1]), 0.4e1) + 0.2e-4 * cos(_anglePosition.thetas[3]) * pow(cos(_anglePosition.thetas[1]), 0.2e1) - 0.1e-4 - 0.2e-5 * pow(cos(_anglePosition.thetas[3]), 0.2e1)) * pow(cos(_anglePosition.thetas[2]), 0.2e1) + (0.2e-4 * pow(cos(_anglePosition.thetas[1]), 0.4e1) * sin(_anglePosition.thetas[2]) * sin(_anglePosition.thetas[3]) - 0.2e-4 * pow(cos(_anglePosition.thetas[1]), 0.2e1) * sin(_anglePosition.thetas[3]) * sin(_anglePosition.thetas[2])) * cos(_anglePosition.thetas[2]) + 0.1762e-1 * cos(_anglePosition.thetas[3]) + 0.2e-4 * pow(cos(_anglePosition.thetas[1]), 0.4e1) * cos(_anglePosition.thetas[3]) - 0.2e-4 * cos(_anglePosition.thetas[3]) * pow(cos(_anglePosition.thetas[1]), 0.2e1) + 0.2774e-1) * _angleAccelerations.accelerations[2] + ((-0.1e-4 * pow(cos(_anglePosition.thetas[3]), 0.2e1) * pow(cos(_anglePosition.thetas[1]), 0.4e1) - 0.2e-5 * pow(cos(_anglePosition.thetas[3]), 0.2e1)) * pow(cos(_anglePosition.thetas[2]), 0.2e1) + 0.6206e-2 + 0.8808e-2 * cos(_anglePosition.thetas[3])) * _angleAccelerations.accelerations[3] + (0.2e-5 * sin(_anglePosition.thetas[1]) * sin(_anglePosition.thetas[2]) - 0.4e-5 * sin(_anglePosition.thetas[1]) * sin(_anglePosition.thetas[2]) * cos(_anglePosition.thetas[3])) * cos(_anglePosition.thetas[1]) * cos(_anglePosition.thetas[2]) * _angleAccelerations.accelerations[1] + (((-0.4e-5 * sin(_anglePosition.thetas[3]) - 0.2e-5 * cos(_anglePosition.thetas[3]) * sin(_anglePosition.thetas[3])) * pow(cos(_anglePosition.thetas[1]), 0.2e1) + (-0.1121e-1 * sin(_anglePosition.thetas[3]) - 0.5000e-3) * cos(_anglePosition.thetas[3]) - 0.1762e-1 * sin(_anglePosition.thetas[3])) * pow(cos(_anglePosition.thetas[2]), 0.2e1) + ((0.10e-4 * sin(_anglePosition.thetas[2]) - 0.2e-5 * sin(_anglePosition.thetas[2]) * pow(cos(_anglePosition.thetas[3]), 0.2e1) - 0.1e-4 * sin(_anglePosition.thetas[2]) * cos(_anglePosition.thetas[3])) * pow(cos(_anglePosition.thetas[1]), 0.2e1) - 0.1121e-1 * sin(_anglePosition.thetas[2]) * pow(cos(_anglePosition.thetas[3]), 0.2e1) + 0.5000e-3 * sin(_anglePosition.thetas[2]) * sin(_anglePosition.thetas[3]) - 0.1761e-1 * sin(_anglePosition.thetas[2]) * cos(_anglePosition.thetas[3]) - 0.1582e-1 * sin(_anglePosition.thetas[2])) * cos(_anglePosition.thetas[2]) + (0.2500e-3 + 0.5606e-2 * sin(_anglePosition.thetas[3])) * cos(_anglePosition.thetas[3]) + 0.8808e-2 * sin(_anglePosition.thetas[3])) * pow(velocities.velocities[1], 0.2e1) + (((0.80e-5 * sin(_anglePosition.thetas[1]) - 0.10e-4 * sin(_anglePosition.thetas[1]) * pow(cos(_anglePosition.thetas[3]), 0.2e1) - 0.6e-5 * sin(_anglePosition.thetas[1]) * cos(_anglePosition.thetas[3])) * cos(_anglePosition.thetas[1]) * pow(cos(_anglePosition.thetas[2]), 0.2e1) + (-0.70e-5 * sin(_anglePosition.thetas[1]) + 0.4e-5 * sin(_anglePosition.thetas[1]) * cos(_anglePosition.thetas[3]) + 0.5e-5 * sin(_anglePosition.thetas[1]) * pow(cos(_anglePosition.thetas[3]), 0.2e1)) * cos(_anglePosition.thetas[1])) * velocities.velocities[2] + ((0.5e-5 * sin(_anglePosition.thetas[1]) + 0.3e-5 * sin(_anglePosition.thetas[1]) * cos(_anglePosition.thetas[3]) - 0.10e-4 * sin(_anglePosition.thetas[1]) * pow(cos(_anglePosition.thetas[3]), 0.2e1)) * cos(_anglePosition.thetas[1]) * pow(cos(_anglePosition.thetas[2]), 0.2e1) + 0.3e-5 * sin(_anglePosition.thetas[1]) * sin(_anglePosition.thetas[2]) * cos(_anglePosition.thetas[1]) * cos(_anglePosition.thetas[2]) * sin(_anglePosition.thetas[3]) + (-0.5e-5 * sin(_anglePosition.thetas[1]) + 0.5e-5 * sin(_anglePosition.thetas[1]) * pow(cos(_anglePosition.thetas[3]), 0.2e1)) * cos(_anglePosition.thetas[1])) * velocities.velocities[3]) * velocities.velocities[1] + (((-0.1e-4 * sin(_anglePosition.thetas[3]) - 0.1e-4 * cos(_anglePosition.thetas[3]) * sin(_anglePosition.thetas[3])) * pow(cos(_anglePosition.thetas[1]), 0.4e1) + (0.2e-4 * sin(_anglePosition.thetas[3]) + 0.6e-5 * cos(_anglePosition.thetas[3]) * sin(_anglePosition.thetas[3])) * pow(cos(_anglePosition.thetas[1]), 0.2e1) - 0.2e-5 * cos(_anglePosition.thetas[3]) * sin(_anglePosition.thetas[3]) - 0.2e-5 * sin(_anglePosition.thetas[3])) * pow(cos(_anglePosition.thetas[2]), 0.2e1) + ((-0.1e-4 * sin(_anglePosition.thetas[2]) * pow(cos(_anglePosition.thetas[3]), 0.2e1) + 0.2e-4 * sin(_anglePosition.thetas[2]) * cos(_anglePosition.thetas[3])) * pow(cos(_anglePosition.thetas[1]), 0.4e1) + (0.6e-5 * sin(_anglePosition.thetas[2]) * pow(cos(_anglePosition.thetas[3]), 0.2e1) - 0.2e-4 * sin(_anglePosition.thetas[2]) * cos(_anglePosition.thetas[3])) * pow(cos(_anglePosition.thetas[1]), 0.2e1) - 0.2e-5 * sin(_anglePosition.thetas[2]) * pow(cos(_anglePosition.thetas[3]), 0.2e1) + 0.10e-4 * sin(_anglePosition.thetas[2])) * cos(_anglePosition.thetas[2]) + 0.1e-4 * pow(cos(_anglePosition.thetas[1]), 0.4e1) * sin(_anglePosition.thetas[3]) - 0.1e-4 * pow(cos(_anglePosition.thetas[1]), 0.2e1) * sin(_anglePosition.thetas[3])) * pow(velocities.velocities[2], 0.2e1) + ((0.4e-5 * pow(cos(_anglePosition.thetas[1]), 0.2e1) * sin(_anglePosition.thetas[3]) - 0.4e-5 * pow(cos(_anglePosition.thetas[1]), 0.4e1) * sin(_anglePosition.thetas[3])) * pow(cos(_anglePosition.thetas[2]), 0.2e1) - 0.1762e-1 * sin(_anglePosition.thetas[3])) * velocities.velocities[3] * velocities.velocities[2] + ((-0.2e-5 * cos(_anglePosition.thetas[3]) * sin(_anglePosition.thetas[3]) - 0.1e-4 * pow(cos(_anglePosition.thetas[1]), 0.4e1) * cos(_anglePosition.thetas[3]) * sin(_anglePosition.thetas[3]) + 0.6e-5 * pow(cos(_anglePosition.thetas[1]), 0.2e1) * sin(_anglePosition.thetas[3]) * cos(_anglePosition.thetas[3])) * pow(cos(_anglePosition.thetas[2]), 0.2e1) + (-0.2e-5 * sin(_anglePosition.thetas[2]) * pow(cos(_anglePosition.thetas[3]), 0.2e1) - 0.1e-4 * pow(cos(_anglePosition.thetas[1]), 0.4e1) * pow(cos(_anglePosition.thetas[3]), 0.2e1) * sin(_anglePosition.thetas[2]) + 0.6e-5 * pow(cos(_anglePosition.thetas[1]), 0.2e1) * pow(cos(_anglePosition.thetas[3]), 0.2e1) * sin(_anglePosition.thetas[2])) * cos(_anglePosition.thetas[2]) - 0.8808e-2 * sin(_anglePosition.thetas[3])) * pow(velocities.velocities[3], 0.2e1) - 0.3930e0 * sin(_anglePosition.thetas[2]) * cos(_anglePosition.thetas[3]) - 0.3930e0 * cos(_anglePosition.thetas[2]) * sin(_anglePosition.thetas[3]) - 0.9962e0 * sin(_anglePosition.thetas[2]);
	_returnTorques.torques[3] = ((-0.1e-4 * pow(cos(_anglePosition.thetas[3]), 0.2e1) * pow(cos(_anglePosition.thetas[1]), 0.4e1) - 0.4e-5 * pow(cos(_anglePosition.thetas[3]), 0.2e1) * pow(cos(_anglePosition.thetas[1]), 0.2e1) + 0.2e-5 * pow(cos(_anglePosition.thetas[3]), 0.2e1)) * pow(cos(_anglePosition.thetas[2]), 0.2e1) - 0.4e-5 * cos(_anglePosition.thetas[2]) * pow(cos(_anglePosition.thetas[1]), 0.4e1) * sin(_anglePosition.thetas[3]) * sin(_anglePosition.thetas[2]) + 0.8808e-2 * cos(_anglePosition.thetas[3]) + 0.6206e-2) * _angleAccelerations.accelerations[2] + (0.6206e-2 + (-0.1e-4 * pow(cos(_anglePosition.thetas[3]), 0.2e1) * pow(cos(_anglePosition.thetas[1]), 0.4e1) - 0.4e-5 * pow(cos(_anglePosition.thetas[3]), 0.2e1) * pow(cos(_anglePosition.thetas[1]), 0.2e1) + 0.2e-5 * pow(cos(_anglePosition.thetas[3]), 0.2e1)) * pow(cos(_anglePosition.thetas[2]), 0.2e1)) * _angleAccelerations.accelerations[3] + ((-0.2e-5 * pow(cos(_anglePosition.thetas[1]), 0.2e1) * sin(_anglePosition.thetas[3]) * cos(_anglePosition.thetas[3]) + (-0.1121e-1 * sin(_anglePosition.thetas[3]) - 0.2500e-3) * cos(_anglePosition.thetas[3]) - 0.8808e-2 * sin(_anglePosition.thetas[3])) * pow(cos(_anglePosition.thetas[2]), 0.2e1) + (-0.1121e-1 * sin(_anglePosition.thetas[2]) * pow(cos(_anglePosition.thetas[3]), 0.2e1) + 0.2500e-3 * sin(_anglePosition.thetas[2]) * sin(_anglePosition.thetas[3]) - 0.8808e-2 * sin(_anglePosition.thetas[2]) * cos(_anglePosition.thetas[3]) - 0.2e-5 * pow(cos(_anglePosition.thetas[1]), 0.2e1) * pow(cos(_anglePosition.thetas[3]), 0.2e1) * sin(_anglePosition.thetas[2]) + 0.5606e-2 * sin(_anglePosition.thetas[2])) * cos(_anglePosition.thetas[2]) + (-0.1000e-3 + 0.5606e-2 * sin(_anglePosition.thetas[3])) * cos(_anglePosition.thetas[3]) + 0.8808e-2 * sin(_anglePosition.thetas[3])) * pow(velocities.velocities[1], 0.2e1) + (((-0.4e-5 * sin(_anglePosition.thetas[1]) * pow(cos(_anglePosition.thetas[3]), 0.2e1) + 0.2e-5 * sin(_anglePosition.thetas[1]) * cos(_anglePosition.thetas[3]) + 0.2e-5 * sin(_anglePosition.thetas[1])) * cos(_anglePosition.thetas[1]) * pow(cos(_anglePosition.thetas[2]), 0.2e1) - 0.2e-5 * sin(_anglePosition.thetas[1]) * sin(_anglePosition.thetas[2]) * cos(_anglePosition.thetas[1]) * cos(_anglePosition.thetas[2]) * sin(_anglePosition.thetas[3]) + (-0.2e-5 * sin(_anglePosition.thetas[1]) + 0.2e-5 * sin(_anglePosition.thetas[1]) * pow(cos(_anglePosition.thetas[3]), 0.2e1)) * cos(_anglePosition.thetas[1])) * velocities.velocities[2] + ((0.2e-5 * sin(_anglePosition.thetas[1]) - 0.4e-5 * sin(_anglePosition.thetas[1]) * pow(cos(_anglePosition.thetas[3]), 0.2e1)) * cos(_anglePosition.thetas[1]) * pow(cos(_anglePosition.thetas[2]), 0.2e1) + (-0.2e-5 * sin(_anglePosition.thetas[1]) + 0.2e-5 * sin(_anglePosition.thetas[1]) * pow(cos(_anglePosition.thetas[3]), 0.2e1)) * cos(_anglePosition.thetas[1])) * velocities.velocities[3]) * velocities.velocities[1] + ((0.1e-4 * pow(cos(_anglePosition.thetas[1]), 0.4e1) * cos(_anglePosition.thetas[3]) * sin(_anglePosition.thetas[3]) - 0.6e-5 * pow(cos(_anglePosition.thetas[1]), 0.2e1) * sin(_anglePosition.thetas[3]) * cos(_anglePosition.thetas[3])) * pow(cos(_anglePosition.thetas[2]), 0.2e1) + ((0.1e-4 * sin(_anglePosition.thetas[2]) * pow(cos(_anglePosition.thetas[3]), 0.2e1) + 0.1e-4 * sin(_anglePosition.thetas[2]) * cos(_anglePosition.thetas[3])) * pow(cos(_anglePosition.thetas[1]), 0.4e1) + (-0.6e-5 * sin(_anglePosition.thetas[2]) * pow(cos(_anglePosition.thetas[3]), 0.2e1) - 0.10e-4 * sin(_anglePosition.thetas[2]) * cos(_anglePosition.thetas[3])) * pow(cos(_anglePosition.thetas[1]), 0.2e1) + 0.2e-5 * sin(_anglePosition.thetas[2]) * pow(cos(_anglePosition.thetas[3]), 0.2e1)) * cos(_anglePosition.thetas[2]) + 0.8808e-2 * sin(_anglePosition.thetas[3]) - 0.4e-5 * pow(cos(_anglePosition.thetas[1]), 0.4e1) * sin(_anglePosition.thetas[3]) + 0.4e-5 * pow(cos(_anglePosition.thetas[1]), 0.2e1) * sin(_anglePosition.thetas[3])) * pow(velocities.velocities[2], 0.2e1) + ((-0.4e-5 * pow(cos(_anglePosition.thetas[1]), 0.2e1) * sin(_anglePosition.thetas[3]) + 0.4e-5 * pow(cos(_anglePosition.thetas[1]), 0.4e1) * sin(_anglePosition.thetas[3])) * pow(cos(_anglePosition.thetas[2]), 0.2e1) + (-0.4e-5 * pow(cos(_anglePosition.thetas[1]), 0.2e1) * sin(_anglePosition.thetas[2]) * cos(_anglePosition.thetas[3]) + 0.4e-5 * pow(cos(_anglePosition.thetas[1]), 0.4e1) * sin(_anglePosition.thetas[2]) * cos(_anglePosition.thetas[3])) * cos(_anglePosition.thetas[2]) + 0.4e-5 * pow(cos(_anglePosition.thetas[1]), 0.2e1) * sin(_anglePosition.thetas[3]) - 0.4e-5 * pow(cos(_anglePosition.thetas[1]), 0.4e1) * sin(_anglePosition.thetas[3])) * velocities.velocities[3] * velocities.velocities[2] + ((0.1e-4 * pow(cos(_anglePosition.thetas[1]), 0.4e1) * cos(_anglePosition.thetas[3]) * sin(_anglePosition.thetas[3]) + 0.4e-5 * pow(cos(_anglePosition.thetas[1]), 0.2e1) * sin(_anglePosition.thetas[3]) * cos(_anglePosition.thetas[3])) * pow(cos(_anglePosition.thetas[2]), 0.2e1) + (0.1e-4 * pow(cos(_anglePosition.thetas[1]), 0.4e1) * pow(cos(_anglePosition.thetas[3]), 0.2e1) * sin(_anglePosition.thetas[2]) + 0.4e-5 * pow(cos(_anglePosition.thetas[1]), 0.2e1) * pow(cos(_anglePosition.thetas[3]), 0.2e1) * sin(_anglePosition.thetas[2])) * cos(_anglePosition.thetas[2])) * pow(velocities.velocities[3], 0.2e1) - 0.3930e0 * sin(_anglePosition.thetas[2]) * cos(_anglePosition.thetas[3]) - 0.3930e0 * cos(_anglePosition.thetas[2]) * sin(_anglePosition.thetas[3]);

	_previousVelocities = velocities;
	
	return _returnTorques;
}

void Dynamics::SetStartPos(JointAngles& startAngles)
{
	_anglePosition = startAngles;
}
