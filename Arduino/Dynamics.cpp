#include "Dynamics.h"  

Dynamics::Dynamics(ComputerConnection* pointer) : pComCon(pointer) {}

JointTorques Dynamics::InverseDynamics(JointAngles& positions, Velocities& velocities, Accelerations& accelerations)
{
	positions.ConvertTo(Radians);
	velocities.ConvertTo(RadiansPerSec);

	JointTorques returnJointTorques;
	
	// Old dynamics using SolidWorks' masses:
	//returnJointTorques.torques[1] = cos(positions.thetas[2] * 2.0) * accelerations.accelerations[1] * (-1.0716319688E-2) - cos(positions.thetas[2] * 2.0 + positions.thetas[3]) * accelerations.accelerations[1] * 8.8088E-3 + cos(positions.thetas[3]) * accelerations.accelerations[1] * 8.8088E-3 - cos(positions.thetas[2] * 2.0 + positions.thetas[3] * 2.0) * accelerations.accelerations[1] * 2.5528E-3 + accelerations.accelerations[1] * 1.4169119688E-2 - sin(positions.thetas[3]) * velocities.velocities[1] * velocities.velocities[3] * 8.8088E-3 + sin(positions.thetas[2] * 2.0 + positions.thetas[3] * 2.0) * velocities.velocities[1] * velocities.velocities[2] * 5.1056E-3 + sin(positions.thetas[2] * 2.0 + positions.thetas[3] * 2.0) * velocities.velocities[1] * velocities.velocities[3] * 5.1056E-3 + sin(positions.thetas[2] * 2.0) * velocities.velocities[1] * velocities.velocities[2] * 2.1432639376E-2 + sin(positions.thetas[2] * 2.0 + positions.thetas[3]) * velocities.velocities[1] * velocities.velocities[2] * 1.76176E-2 + sin(positions.thetas[2] * 2.0 + positions.thetas[3]) * velocities.velocities[1] * velocities.velocities[3] * 8.8088E-3;
	//returnJointTorques.torques[2] = sin(positions.thetas[2]) * (-9.967052536E-1) - sin(positions.thetas[2] + positions.thetas[3]) * 3.931928E-1 - sin(positions.thetas[2] * 2.0) * pow(velocities.velocities[1], 2.0) * 1.0716319688E-2 - sin(positions.thetas[2] * 2.0 + positions.thetas[3]) * pow(velocities.velocities[1], 2.0) * 8.8088E-3 - sin(positions.thetas[3]) * pow(velocities.velocities[3], 2.0) * 8.8088E-3 + cos(positions.thetas[3]) * accelerations.accelerations[3] * 8.8088E-3 - sin(positions.thetas[2] * 2.0 + positions.thetas[3] * 2.0) * pow(velocities.velocities[1], 2.0) * 2.5528E-3 + accelerations.accelerations[2] * 2.1532639376E-2;
	//returnJointTorques.torques[3] = sin(positions.thetas[2] + positions.thetas[3]) * (-3.931928E-1) - sin(positions.thetas[2] * 2.0 + positions.thetas[3]) * pow(velocities.velocities[1], 2.0) * 4.4044E-3 + sin(positions.thetas[3]) * pow(velocities.velocities[1], 2.0) * 4.4044E-3 + cos(positions.thetas[3]) * accelerations.accelerations[2] * 8.8088E-3 - sin(positions.thetas[2] * 2.0 + positions.thetas[3] * 2.0) * pow(velocities.velocities[1], 2.0) * 2.5528E-3 + accelerations.accelerations[3] * 6.2056E-3;
	
	// New dynamics using measured masses:
	returnJointTorques.torques[1] = ((-0.1647e-1 + (0.4e-5 * pow(cos(positions.thetas[1]), 0.2e1) - 0.1300e-1) * pow(cos(positions.thetas[3]), 0.2e1) - 0.1885e-1 * cos(positions.thetas[3])) * pow(cos(positions.thetas[2]), 0.2e1) + (0.1885e-1 * sin(positions.thetas[2]) * sin(positions.thetas[3]) + 0.1300e-1 * sin(positions.thetas[3]) * sin(positions.thetas[2]) * cos(positions.thetas[3])) * cos(positions.thetas[2]) + 0.6498e-2 * pow(cos(positions.thetas[3]), 0.2e1) + 0.1885e-1 * cos(positions.thetas[3]) + 0.2337e-1) * accelerations.accelerations[1] - 0.2e-5 * accelerations.accelerations[2] * cos(positions.thetas[1]) * cos(positions.thetas[2]) * sin(positions.thetas[1]) * sin(positions.thetas[2]) * cos(positions.thetas[3]) + ((-0.10e-4 * cos(positions.thetas[1]) * sin(positions.thetas[1]) - 0.2e-5 * cos(positions.thetas[1]) * sin(positions.thetas[1]) * cos(positions.thetas[3])) * pow(cos(positions.thetas[2]), 0.2e1) + (0.2e-5 * cos(positions.thetas[1]) * sin(positions.thetas[2]) * sin(positions.thetas[1]) * sin(positions.thetas[3]) + 0.4e-5 * cos(positions.thetas[1]) * sin(positions.thetas[2]) * cos(positions.thetas[3]) * sin(positions.thetas[1]) * sin(positions.thetas[3])) * cos(positions.thetas[2]) + 0.2e-5 * cos(positions.thetas[1]) * sin(positions.thetas[1]) * cos(positions.thetas[3]) + 0.10e-4 * cos(positions.thetas[1]) * sin(positions.thetas[1])) * pow(velocities.velocities[1], 0.2e1) + ((((0.2e-4 * pow(cos(positions.thetas[1]), 0.2e1) * sin(positions.thetas[3]) + 0.2598e-1 * sin(positions.thetas[3])) * cos(positions.thetas[3]) + 0.3770e-1 * sin(positions.thetas[3])) * pow(cos(positions.thetas[2]), 0.2e1) + ((0.2e-4 * pow(cos(positions.thetas[1]), 0.2e1) * sin(positions.thetas[2]) + 0.2598e-1 * sin(positions.thetas[2])) * pow(cos(positions.thetas[3]), 0.2e1) + 0.3770e-1 * sin(positions.thetas[2]) * cos(positions.thetas[3]) + 0.3293e-1 * sin(positions.thetas[2]) - 0.1e-4 * pow(cos(positions.thetas[1]), 0.2e1) * sin(positions.thetas[2])) * cos(positions.thetas[2]) + (-0.1299e-1 * sin(positions.thetas[3]) - 0.1e-4 * pow(cos(positions.thetas[1]), 0.2e1) * sin(positions.thetas[3])) * cos(positions.thetas[3]) - 0.1885e-1 * sin(positions.thetas[3])) * velocities.velocities[2] + (((0.2e-4 * pow(cos(positions.thetas[1]), 0.2e1) * sin(positions.thetas[3]) + 0.2598e-1 * sin(positions.thetas[3])) * cos(positions.thetas[3]) + 0.1885e-1 * sin(positions.thetas[3])) * pow(cos(positions.thetas[2]), 0.2e1) + ((0.2e-4 * pow(cos(positions.thetas[1]), 0.2e1) * sin(positions.thetas[2]) + 0.2598e-1 * sin(positions.thetas[2])) * pow(cos(positions.thetas[3]), 0.2e1) + 0.1885e-1 * sin(positions.thetas[2]) * cos(positions.thetas[3]) - 0.1299e-1 * sin(positions.thetas[2]) - 0.1e-4 * pow(cos(positions.thetas[1]), 0.2e1) * sin(positions.thetas[2])) * cos(positions.thetas[2]) + (-0.1299e-1 * sin(positions.thetas[3]) - 0.1e-4 * pow(cos(positions.thetas[1]), 0.2e1) * sin(positions.thetas[3])) * cos(positions.thetas[3]) - 0.1885e-1 * sin(positions.thetas[3])) * velocities.velocities[3]) * velocities.velocities[1] + (-0.2e-5 * pow(cos(positions.thetas[2]), 0.2e1) * cos(positions.thetas[3]) * sin(positions.thetas[1]) * cos(positions.thetas[1]) + (0.2e-5 * cos(positions.thetas[1]) * sin(positions.thetas[2]) * sin(positions.thetas[1]) * sin(positions.thetas[3]) + 0.4e-5 * cos(positions.thetas[1]) * sin(positions.thetas[2]) * cos(positions.thetas[3]) * sin(positions.thetas[1]) * sin(positions.thetas[3])) * cos(positions.thetas[2]) + 0.2e-5 * cos(positions.thetas[1]) * sin(positions.thetas[1]) * cos(positions.thetas[3])) * pow(velocities.velocities[2], 0.2e1) + ((-0.80e-5 * pow(cos(positions.thetas[3]), 0.2e1) * cos(positions.thetas[1]) * sin(positions.thetas[1]) + 0.40e-5 * cos(positions.thetas[1]) * sin(positions.thetas[1])) * pow(cos(positions.thetas[2]), 0.2e1) + 0.10e-4 * cos(positions.thetas[1]) * sin(positions.thetas[2]) * sin(positions.thetas[1]) * cos(positions.thetas[2]) * sin(positions.thetas[3]) + 0.40e-5 * pow(cos(positions.thetas[3]), 0.2e1) * cos(positions.thetas[1]) * sin(positions.thetas[1])) * velocities.velocities[3] * velocities.velocities[2] + 0.4e-5 * sin(positions.thetas[1]) * cos(positions.thetas[2]) * pow(velocities.velocities[3], 0.2e1) * cos(positions.thetas[3]) * cos(positions.thetas[1]) * sin(positions.thetas[2]) * sin(positions.thetas[3]);
	returnJointTorques.torques[2] = ((0.2e-4 - 0.2e-4 * pow(cos(positions.thetas[2]), 0.2e1)) * pow(cos(positions.thetas[1]), 0.4e1) + (-0.2e-4 + 0.2e-4 * pow(cos(positions.thetas[2]), 0.2e1)) * pow(cos(positions.thetas[1]), 0.2e1) + (-0.10e-4 + 0.4e-5 * pow(cos(positions.thetas[3]), 0.2e1)) * pow(cos(positions.thetas[2]), 0.2e1) + 0.1885e-1 * cos(positions.thetas[3]) + 0.2967e-1) * accelerations.accelerations[2] + (0.9424e-2 * cos(positions.thetas[3]) + 0.4e-5 * pow(cos(positions.thetas[2]), 0.2e1) * pow(cos(positions.thetas[3]), 0.2e1) - 0.2e-5 * pow(cos(positions.thetas[1]), 0.4e1) * sin(positions.thetas[2]) * cos(positions.thetas[2]) * sin(positions.thetas[3]) + 0.6598e-2) * accelerations.accelerations[3] + 0.2e-5 * accelerations.accelerations[1] * cos(positions.thetas[1]) * sin(positions.thetas[2]) * sin(positions.thetas[1]) * cos(positions.thetas[2]) * cos(positions.thetas[3]) + (((-0.1e-4 * sin(positions.thetas[3]) + 0.16e-4 * sin(positions.thetas[3]) * cos(positions.thetas[3])) * pow(cos(positions.thetas[2]), 0.2e1) + (0.1e-4 * sin(positions.thetas[2]) + 0.16e-4 * sin(positions.thetas[2]) * pow(cos(positions.thetas[3]), 0.2e1)) * cos(positions.thetas[2]) - 0.6e-5 * sin(positions.thetas[3]) * cos(positions.thetas[3])) * pow(cos(positions.thetas[1]), 0.4e1) + (-0.18e-4 * pow(cos(positions.thetas[2]), 0.2e1) * sin(positions.thetas[3]) * cos(positions.thetas[3]) + (-0.1e-4 * sin(positions.thetas[2]) - 0.18e-4 * sin(positions.thetas[2]) * pow(cos(positions.thetas[3]), 0.2e1)) * cos(positions.thetas[2]) + 0.1e-4 * sin(positions.thetas[3]) * cos(positions.thetas[3])) * pow(cos(positions.thetas[1]), 0.2e1) + (-0.2e-5 * sin(positions.thetas[3]) - 0.4e-5 * sin(positions.thetas[3]) * cos(positions.thetas[3])) * pow(cos(positions.thetas[2]), 0.2e1) - 0.4e-5 * cos(positions.thetas[2]) * sin(positions.thetas[2]) * pow(cos(positions.thetas[3]), 0.2e1)) * pow(velocities.velocities[2], 0.2e1) + (((-0.4e-4 * pow(cos(positions.thetas[2]), 0.2e1) * sin(positions.thetas[3]) * cos(positions.thetas[3]) + (-0.4e-4 * sin(positions.thetas[2]) * pow(cos(positions.thetas[3]), 0.2e1) + 0.2e-4 * sin(positions.thetas[2])) * cos(positions.thetas[2]) + 0.2e-4 * sin(positions.thetas[3]) * cos(positions.thetas[3])) * pow(cos(positions.thetas[1]), 0.4e1) + (0.4e-4 * pow(cos(positions.thetas[2]), 0.2e1) * sin(positions.thetas[3]) * cos(positions.thetas[3]) + (0.4e-4 * sin(positions.thetas[2]) * pow(cos(positions.thetas[3]), 0.2e1) - 0.2e-4 * sin(positions.thetas[2])) * cos(positions.thetas[2]) - 0.2e-4 * sin(positions.thetas[3]) * cos(positions.thetas[3])) * pow(cos(positions.thetas[1]), 0.2e1) - 0.1885e-1 * sin(positions.thetas[3])) * velocities.velocities[3] + ((0.8e-5 * pow(cos(positions.thetas[3]), 0.2e1) * sin(positions.thetas[1]) - 0.2e-5 * sin(positions.thetas[1]) * cos(positions.thetas[3]) - 0.4e-5 * sin(positions.thetas[1])) * pow(cos(positions.thetas[2]), 0.2e1) + 0.4e-5 * sin(positions.thetas[1]) + 0.2e-5 * sin(positions.thetas[1]) * cos(positions.thetas[3]) - 0.4e-5 * pow(cos(positions.thetas[3]), 0.2e1) * sin(positions.thetas[1])) * cos(positions.thetas[1]) * velocities.velocities[1]) * velocities.velocities[2] + ((0.16e-4 * pow(cos(positions.thetas[2]), 0.2e1) * sin(positions.thetas[3]) * cos(positions.thetas[3]) + (-0.6e-5 * sin(positions.thetas[2]) - 0.2e-5 * sin(positions.thetas[2]) * cos(positions.thetas[3]) + 0.16e-4 * sin(positions.thetas[2]) * pow(cos(positions.thetas[3]), 0.2e1)) * cos(positions.thetas[2]) - 0.6e-5 * sin(positions.thetas[3]) * cos(positions.thetas[3])) * pow(cos(positions.thetas[1]), 0.4e1) + (-0.18e-4 * pow(cos(positions.thetas[2]), 0.2e1) * sin(positions.thetas[3]) * cos(positions.thetas[3]) + (0.1e-4 * sin(positions.thetas[2]) - 0.18e-4 * sin(positions.thetas[2]) * pow(cos(positions.thetas[3]), 0.2e1)) * cos(positions.thetas[2]) + 0.8e-5 * sin(positions.thetas[3]) * cos(positions.thetas[3])) * pow(cos(positions.thetas[1]), 0.2e1) - 0.9424e-2 * sin(positions.thetas[3]) - 0.4e-5 * cos(positions.thetas[2]) * sin(positions.thetas[2]) * pow(cos(positions.thetas[3]), 0.2e1) - 0.4e-5 * pow(cos(positions.thetas[2]), 0.2e1) * sin(positions.thetas[3]) * cos(positions.thetas[3])) * pow(velocities.velocities[3], 0.2e1) + ((0.8e-5 * pow(cos(positions.thetas[3]), 0.2e1) * sin(positions.thetas[1]) - 0.4e-5 * sin(positions.thetas[1])) * pow(cos(positions.thetas[2]), 0.2e1) - 0.10e-4 * sin(positions.thetas[2]) * sin(positions.thetas[1]) * cos(positions.thetas[2]) * sin(positions.thetas[3]) + 0.4e-5 * sin(positions.thetas[1]) - 0.4e-5 * pow(cos(positions.thetas[3]), 0.2e1) * sin(positions.thetas[1])) * cos(positions.thetas[1]) * velocities.velocities[1] * velocities.velocities[3] + (((0.6e-5 * sin(positions.thetas[3]) + 0.4e-5 * sin(positions.thetas[3]) * cos(positions.thetas[3])) * pow(cos(positions.thetas[2]), 0.2e1) + 0.4e-5 * cos(positions.thetas[2]) * sin(positions.thetas[2]) * pow(cos(positions.thetas[3]), 0.2e1) - 0.4e-5 * sin(positions.thetas[3]) - 0.4e-5 * sin(positions.thetas[3]) * cos(positions.thetas[3])) * pow(cos(positions.thetas[1]), 0.2e1) + (-0.1886e-1 * sin(positions.thetas[3]) - 0.1300e-1 * sin(positions.thetas[3]) * cos(positions.thetas[3])) * pow(cos(positions.thetas[2]), 0.2e1) + (-0.1646e-1 * sin(positions.thetas[2]) - 0.1300e-1 * sin(positions.thetas[2]) * pow(cos(positions.thetas[3]), 0.2e1) - 0.1885e-1 * sin(positions.thetas[2]) * cos(positions.thetas[3])) * cos(positions.thetas[2]) + 0.9428e-2 * sin(positions.thetas[3]) + 0.6502e-2 * sin(positions.thetas[3]) * cos(positions.thetas[3])) * pow(velocities.velocities[1], 0.2e1) - 0.4204e0 * sin(positions.thetas[2]) * cos(positions.thetas[3]) - 0.4204e0 * cos(positions.thetas[2]) * sin(positions.thetas[3]) - 0.1070e1 * sin(positions.thetas[2]);
	returnJointTorques.torques[3] = (((-0.4e-5 + 0.2e-5 * cos(positions.thetas[3]) + 0.4e-5 * pow(cos(positions.thetas[3]), 0.2e1)) * pow(cos(positions.thetas[2]), 0.2e1) - 0.2e-5 * cos(positions.thetas[3]) - 0.4e-5 * pow(cos(positions.thetas[3]), 0.2e1)) * pow(cos(positions.thetas[1]), 0.4e1) + 0.9424e-2 * cos(positions.thetas[3]) - 0.4e-5 * pow(cos(positions.thetas[2]), 0.2e1) * pow(cos(positions.thetas[3]), 0.2e1) + 0.6598e-2)* accelerations.accelerations[2] + (0.6598e-2 + ((-0.4e-5 + 0.4e-5 * pow(cos(positions.thetas[3]), 0.2e1)) * pow(cos(positions.thetas[2]), 0.2e1) - 0.4e-5 * pow(cos(positions.thetas[3]), 0.2e1)) * pow(cos(positions.thetas[1]), 0.4e1) + ((0.2e-5 - 0.2e-5 * pow(cos(positions.thetas[3]), 0.2e1)) * pow(cos(positions.thetas[2]), 0.2e1) + 0.2e-5 * pow(cos(positions.thetas[3]), 0.2e1)) * pow(cos(positions.thetas[1]), 0.2e1)) * accelerations.accelerations[3] + (((-0.2e-5 * sin(positions.thetas[3]) + 0.2e-4 * sin(positions.thetas[3]) * cos(positions.thetas[3])) * pow(cos(positions.thetas[2]), 0.2e1) + (-0.1e-4 * sin(positions.thetas[2]) + 0.2e-4 * sin(positions.thetas[2]) * pow(cos(positions.thetas[3]), 0.2e1)) * cos(positions.thetas[2]) - 0.2e-5 * sin(positions.thetas[3]) - 0.1e-4 * sin(positions.thetas[3]) * cos(positions.thetas[3])) * pow(cos(positions.thetas[1]), 0.4e1) + (-0.2e-4 * pow(cos(positions.thetas[2]), 0.2e1) * sin(positions.thetas[3]) * cos(positions.thetas[3]) + (0.1e-4 * sin(positions.thetas[2]) - 0.2e-4 * sin(positions.thetas[2]) * pow(cos(positions.thetas[3]), 0.2e1)) * cos(positions.thetas[2]) + 0.2e-5 * sin(positions.thetas[3]) + 0.1e-4 * sin(positions.thetas[3]) * cos(positions.thetas[3])) * pow(cos(positions.thetas[1]), 0.2e1) + 0.9424e-2 * sin(positions.thetas[3])) * pow(velocities.velocities[2], 0.2e1) + ((((-0.4e-4 * sin(positions.thetas[3]) * cos(positions.thetas[3]) + 0.2e-5 * sin(positions.thetas[3])) * pow(cos(positions.thetas[2]), 0.2e1) + (0.2e-5 * sin(positions.thetas[2]) * cos(positions.thetas[3]) - 0.4e-4 * sin(positions.thetas[2]) * pow(cos(positions.thetas[3]), 0.2e1) + 0.2e-4 * sin(positions.thetas[2])) * cos(positions.thetas[2]) - 0.2e-5 * sin(positions.thetas[3]) + 0.2e-4 * sin(positions.thetas[3]) * cos(positions.thetas[3])) * pow(cos(positions.thetas[1]), 0.4e1) + ((0.4e-4 * sin(positions.thetas[3]) * cos(positions.thetas[3]) - 0.2e-5 * sin(positions.thetas[3])) * pow(cos(positions.thetas[2]), 0.2e1) + (-0.2e-5 * sin(positions.thetas[2]) * cos(positions.thetas[3]) + 0.4e-4 * sin(positions.thetas[2]) * pow(cos(positions.thetas[3]), 0.2e1) - 0.2e-4 * sin(positions.thetas[2])) * cos(positions.thetas[2]) - 0.2e-4 * sin(positions.thetas[3]) * cos(positions.thetas[3]) + 0.2e-5 * sin(positions.thetas[3])) * pow(cos(positions.thetas[1]), 0.2e1)) * velocities.velocities[3] + ((-0.8e-5 * pow(cos(positions.thetas[3]), 0.2e1) * sin(positions.thetas[1]) + 0.4e-5 * sin(positions.thetas[1])) * pow(cos(positions.thetas[2]), 0.2e1) + (0.3e-5 * sin(positions.thetas[1]) * sin(positions.thetas[2]) * sin(positions.thetas[3]) + 0.2e-5 * sin(positions.thetas[2]) * cos(positions.thetas[3]) * sin(positions.thetas[1]) * sin(positions.thetas[3])) * cos(positions.thetas[2]) - 0.4e-5 * sin(positions.thetas[1]) + 0.4e-5 * pow(cos(positions.thetas[3]), 0.2e1) * sin(positions.thetas[1])) * cos(positions.thetas[1]) * velocities.velocities[1]) * velocities.velocities[2] + ((0.2e-4 * pow(cos(positions.thetas[2]), 0.2e1) * sin(positions.thetas[3]) * cos(positions.thetas[3]) + (-0.1e-4 * sin(positions.thetas[2]) + 0.2e-4 * sin(positions.thetas[2]) * pow(cos(positions.thetas[3]), 0.2e1)) * cos(positions.thetas[2]) - 0.1e-4 * sin(positions.thetas[3]) * cos(positions.thetas[3])) * pow(cos(positions.thetas[1]), 0.4e1) + (-0.2e-4 * pow(cos(positions.thetas[2]), 0.2e1) * sin(positions.thetas[3]) * cos(positions.thetas[3]) + (0.1e-4 * sin(positions.thetas[2]) - 0.2e-4 * sin(positions.thetas[2]) * pow(cos(positions.thetas[3]), 0.2e1)) * cos(positions.thetas[2]) + 0.1e-4 * sin(positions.thetas[3]) * cos(positions.thetas[3])) * pow(cos(positions.thetas[1]), 0.2e1) - 0.4e-5 * cos(positions.thetas[2]) * sin(positions.thetas[2]) * pow(cos(positions.thetas[3]), 0.2e1) - 0.4e-5 * pow(cos(positions.thetas[2]), 0.2e1) * sin(positions.thetas[3]) * cos(positions.thetas[3])) * pow(velocities.velocities[3], 0.2e1) + ((-0.8e-5 * pow(cos(positions.thetas[3]), 0.2e1) * sin(positions.thetas[1]) + 0.4e-5 * sin(positions.thetas[1])) * pow(cos(positions.thetas[2]), 0.2e1) + 0.2e-5 * sin(positions.thetas[2]) * cos(positions.thetas[3]) * sin(positions.thetas[1]) * cos(positions.thetas[2]) * sin(positions.thetas[3]) - 0.4e-5 * sin(positions.thetas[1]) + 0.4e-5 * pow(cos(positions.thetas[3]), 0.2e1) * sin(positions.thetas[1])) * cos(positions.thetas[1]) * velocities.velocities[1] * velocities.velocities[3] + ((0.4e-5 * cos(positions.thetas[2]) * sin(positions.thetas[2]) * pow(cos(positions.thetas[3]), 0.2e1) + 0.4e-5 * pow(cos(positions.thetas[2]), 0.2e1) * sin(positions.thetas[3]) * cos(positions.thetas[3])) * pow(cos(positions.thetas[1]), 0.2e1) + (-0.9424e-2 * sin(positions.thetas[3]) - 0.1300e-1 * sin(positions.thetas[3]) * cos(positions.thetas[3])) * pow(cos(positions.thetas[2]), 0.2e1) + (0.6498e-2 * sin(positions.thetas[2]) - 0.1300e-1 * sin(positions.thetas[2]) * pow(cos(positions.thetas[3]), 0.2e1) - 0.9424e-2 * sin(positions.thetas[2]) * cos(positions.thetas[3])) * cos(positions.thetas[2]) + 0.9424e-2 * sin(positions.thetas[3]) + 0.6498e-2 * sin(positions.thetas[3]) * cos(positions.thetas[3])) * pow(velocities.velocities[1], 0.2e1) - 0.4204e0 * sin(positions.thetas[2]) * cos(positions.thetas[3]) - 0.4204e0 * cos(positions.thetas[2]) * sin(positions.thetas[3]);

	return returnJointTorques;
}

